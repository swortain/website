<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>剑山的个人网站</title>
    <link>https://swortain.wang/</link>
    <description>Recent content on 剑山的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 17 Mar 2023 14:38:28 +0800</lastBuildDate><atom:link href="https://swortain.wang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CyberMatrix|赛博阵列</title>
      <link>https://swortain.wang/project/cybermatrix/</link>
      <pubDate>Fri, 17 Mar 2023 14:38:28 +0800</pubDate>
      
      <guid>https://swortain.wang/project/cybermatrix/</guid>
      <description>CyberMatrix|赛博阵列是一个赛博朋克风格的桌面摆件，硬件采用嘉立创EDA设计，软件在platformIO上编写。代码开源在github上。 功能 用ESP32为控制器。驱动5个7x11的方形点阵，背部有5个WS2812作为背光。板载加速度计和温度传感器。 时间显示 5个点阵可以显示当前的小时和分钟。并且由于ESP32自带WiFi，所以可以连接到NTP服务器进行授时，省去了DS3231之类的实时时</description>
    </item>
    
    <item>
      <title>TouchDesigner入门教程</title>
      <link>https://swortain.wang/blog/touchdesigner-intro/</link>
      <pubDate>Wed, 26 May 2021 16:55:51 +0800</pubDate>
      
      <guid>https://swortain.wang/blog/touchdesigner-intro/</guid>
      <description>其实很久以前就接触过TouchDesigner这个软件，但是当时对这种连线式的编程方式还是比较抗拒，所以只是大概了解了一下就没有继续看了。但是最近有一个项目用到了kinect azure，然后TD对这个东西的支持比较好，所以就用TD做了一次项目。发现和原来用processing写程序的感受还是挺不一样的。最近周围的人越来越多开始用td做项目。所以想开始写一些td的入门教程和防止自己后面会忘记，也给想</description>
    </item>
    
    <item>
      <title>insar-socket | 装置插座</title>
      <link>https://swortain.wang/project/insar-socket/</link>
      <pubDate>Wed, 26 May 2021 15:18:29 +0800</pubDate>
      
      <guid>https://swortain.wang/project/insar-socket/</guid>
      <description>insar-socket是我的第一个产品类的作品，主要的功能是支持Modbus-TCP的插座，可以让你在装置项目中集成一个220的电器，而不需要你懂任何的电子电路知识。 我还写了一写装置软件的库（目前位置仅支持了TouchDesigner）。这样你甚至不需要了解Modbus的相关知识，只需要配网，和软件内部的一些设置即可。 参数 功率：额定功率2000w，长期负载建议不找过1500w。 电压：由于接口采用</description>
    </item>
    
    <item>
      <title>第一篇文章</title>
      <link>https://swortain.wang/blog/first/</link>
      <pubDate>Sat, 15 May 2021 00:33:42 +0800</pubDate>
      
      <guid>https://swortain.wang/blog/first/</guid>
      <description>这是第一篇文章，不出意外的话这里主要是记录一些经过整理的文章（如果有的话。。。），主要的碎片文章还是会更新到简书上。 个人网站主要还是为了展示做过的项目，和作为个人项目经历的目的。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://swortain.wang/pasted-image-20230323231004.png/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://swortain.wang/pasted-image-20230323231004.png/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://swortain.wang/pasted/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://swortain.wang/pasted/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://swortain.wang/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://swortain.wang/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```
Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.
Edit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` &amp;hellip; &amp;ldquo;contents&amp;rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, &amp;ldquo;tags&amp;rdquo;:{{ .Params.tags | jsonify }}{{end}}, &amp;ldquo;categories&amp;rdquo; : {{ .Params.categories | jsonify }}, &amp;hellip; ```
Edit fuse.js options to Search static/js/search.js ``` keys: [ &amp;ldquo;title&amp;rdquo;, &amp;ldquo;contents&amp;rdquo;, &amp;ldquo;tags&amp;rdquo;, &amp;ldquo;categories&amp;rdquo; ] ```</description>
    </item>
    
  </channel>
</rss>
